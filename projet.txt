# target/classes/static/index.html
<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <title>OrganisationSim - Accueil</title>
	<link rel="icon" type="image/x-icon" href="favicon/organisation-sim.svg">
  <link rel="stylesheet" href="style/main.css">
</head>
<body>

<!-- üîó Barre de navigation globale -->
<nav class="navbar">
  <a href="index.html" class="logo">OrganisationSim</a>
  <a href="constraints.html">Cr√©er un projet</a>
  <a href="projects.html">Liste des projets</a>
</nav>

<header>
  <h1>Bienvenue sur OrganisationSim</h1>
</header>

<div class="container">
  <h2>Tableau r√©capitulatif (Diagramme de Pert simplifi√©)</h2>

  <table class="pert-table">
    <thead>
      <tr>
        <th>√âtape</th>
        <th>Responsable</th>
        <th>Dur√©e estim√©e</th>
        <th>Pr√©requis</th>
      </tr>
    </thead>
    <tbody id="pertTableBody">
      <tr>
        <td>Analyse</td>
        <td>Chef de projet</td>
        <td>3 jours</td>
        <td>-</td>
      </tr>
      <tr>
        <td>Conception</td>
        <td>Architecte</td>
        <td>5 jours</td>
        <td>Analyse</td>
      </tr>
      <tr>
        <td>D√©veloppement</td>
        <td>√âquipe Dev</td>
        <td>10 jours</td>
        <td>Conception</td>
      </tr>
      <tr>
        <td>Recette</td>
        <td>QA</td>
        <td>4 jours</td>
        <td>D√©veloppement</td>
      </tr>
    </tbody>
  </table>
</div>

</body>
</html>

# target/classes/templates/login.html
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org"
      layout:decorate="~{fragments/base}"
      th:with="title='Connexion'">
<head>
    <title>Connexion</title>
</head>
<body>
<div layout:fragment="content">
    <section class="container pt-5 mt-5">
        <div class="row justify-content-center">
            <div class="col-md-6 col-lg-4">
                <div class="card shadow">
                    <div class="card-header bg-success text-white">
                        <h4 class="mb-0 text-center">Connexion</h4>
                    </div>
                    <div class="card-body p-4">

                        <div th:if="${param.error}" class="alert alert-danger">
                            Identifiants invalides
                        </div>

                        <form th:action="@{/login}" method="post">
                            <div class="mb-3">
                                <label for="username" class="form-label">Email</label>
                                <input type="text" class="form-control" id="username" name="email" required>
                            </div>
                            <div class="mb-3">
                                <label for="password" class="form-label">Mot de passe</label>
                                <input type="password" class="form-control" id="password" name="password" required>
                            </div>
                            <button type="submit" class="btn btn-success w-100">Se connecter</button>
                        </form>

												<div class="mt-3 text-center">
													<span>Pas encore de compte ?&nbsp;</span>
													<a th:href="@{/register}" class="text-success text-decoration-none">Inscrivez-vous !</a>
											</div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
</body>
</html>

# target/classes/templates/plants/show.html
<!DOCTYPE html>
<html layout:decorate="~{fragments/base}" xmlns:th="http://www.thymeleaf.org">
    <div layout:fragment="content">
        <div class="container">
            <h1 class="mb-4">üå± D√©tail de la plante</h1>

            <div class="card mb-4 shadow-sm">
                <div class="card-body">
                    <h2 class="card-title" th:text="${plant.name}">Nom de la plante</h2>
                    <p class="card-text" th:text="${plant.description}">Description</p>

                    <ul class="list-group list-group-flush mb-3">
                        <li class="list-group-item">
                            <strong>Cat√©gorie :</strong> <span th:text="${plant.category}">Cat√©gorie</span>
                        </li>
                        <li class="list-group-item">
                            <strong>Prix :</strong> <span th:text="${plant.price}">0.00</span> ‚Ç¨
                        </li>
                        <li class="list-group-item">
                            <strong>Stock disponible :</strong> <span th:text="${plant.stock}">0</span>
                        </li>
                    </ul>

                    <a href="/plants" class="btn btn-secondary">Retour √† la page d'acceuil</a>
                </div>
            </div>
        </div>
    </div>
</html>

# target/classes/templates/plants/index.html
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" layout:decorate="~{fragments/base}" th:with="title='Liste des plantes'">

<head>
	<title>Plantes</title>
</head>

<body>
	<div layout:fragment="content">
		<section class="container pt-5 mt-5">
			<div th:if="${finalCurrentUserType == 'admin'}" class="mb-3">
				<a href="/admin/plants/new" class="btn btn-primary">Ajouter une plante</a>
			</div>

			<div class="row">
				<div th:each="plant : ${plants}" class="col-md-4 mb-4">
					<div class="card h-100 plant-card" th:data-id="${plant.id}">
						<div class="card-body position-relative">
							<h5 class="card-title" th:text="${plant.name}">Nom</h5>
							<p class="card-text" th:text="${plant.description}">Description</p>
							<p class="text-muted">Prix¬†: <span th:text="${plant.price}">0.0</span>¬†‚Ç¨</p>
							<p class="text-muted">Stock¬†: <span th:text="${plant.stock}">0</span></p>

							<div class="d-flex gap-2">
								<button type="button" class="btn btn-success flex-grow-1 add-to-cart" th:data-id="${plant.id}" style="z-index: 1; position: relative;"
									th:data-name="${plant.name}" th:data-price="${plant.price}">
									Ajouter au panier
								</button>
							</div>
						</div>
					</div>
				</div>
		</section>
		<script>
			document.addEventListener('DOMContentLoaded', () => {
				const load = () => JSON.parse(localStorage.getItem('cart') || '[]');
				const save = c => localStorage.setItem('cart', JSON.stringify(c));

				// Bouton ajouter au panier
				document.querySelectorAll('.add-to-cart').forEach(btn => {
					btn.addEventListener('click', e => {
						e.stopPropagation();   // bloque la remont√©e vers l‚Äô√©l√©ment <a>
						e.preventDefault();    // annule la navigation
						const id = btn.dataset.id;
						const name = btn.dataset.name;
						const price = parseFloat(btn.dataset.price);

						const cart = load();
						const item = cart.find(i => i.id == id);
						item ? item.qty++ : cart.push({id, name, price, qty: 1});
						save(cart);
						refreshCart();                 // fonction d√©j√† d√©finie dans base.html
					});
				});

				// Navigation vers la fiche plante
				document.querySelectorAll('.plant-card').forEach(card => {
					card.addEventListener('click', () => {
						const id = card.dataset.id;
						window.location.href = "/plants/" + id;
					});
				});
			});
		</script>
	</div>
</body>

</html>

# target/classes/templates/register.html
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org"
      layout:decorate="~{fragments/base}"
      th:with="title='Inscription'">
<head>
    <title>Inscription</title>
</head>
<body>
    <div layout:fragment="content">
        <section class="container pt-5 mt-5">
            <div class="row justify-content-center">
                <div class="col-md-6">
                    <div class="card shadow">
                        <div class="card-header bg-success text-white">
                            <h4 class="mb-0">Cr√©er un compte</h4>
                        </div>
                        <div class="card-body">
                            <form th:action="@{/register}" th:object="${user}" method="post">
                                <div class="mb-3">
                                    <label class="form-label">Nom complet</label>
                                    <input type="text" class="form-control" th:field="*{name}" required>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Adresse email</label>
                                    <input type="email" class="form-control" th:field="*{email}" required>
                                    <small class="text-danger" th:if="${#fields.hasErrors('email')}" th:errors="*{email}"></small>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Mot de passe</label>
                                    <input type="password" class="form-control" th:field="*{password}" required>
                                </div>
                                <button type="submit" class="btn btn-success w-100">S'inscrire</button>
                            </form>
                            <hr>
                            <p class="text-center mb-0">
                                D√©j√† un compte ?
																&nbsp;
                                <a th:href="@{/login}" class="text-success">Se connecter</a>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
</body>
</html>

# target/classes/templates/cart.html
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org"
      layout:decorate="~{fragments/base}"
      th:with="title='Panier'">
<head>
    <title>Panier</title>
</head>
<body>
<div layout:fragment="content">
    <section class="container pt-5 mt-5">
        <h2 class="mb-4">üõí Votre panier</h2>

        <div class="table-responsive">
            <table class="table align-middle">
                <thead>
                <tr>
                    <th>Produit</th>
                    <th>Prix¬†(‚Ç¨)</th>
                    <th>Quantit√©</th>
                    <th>Sous‚Äëtotal¬†(‚Ç¨)</th>
                    <th></th>
                </tr>
                </thead>
                <tbody id="cartBody">
                <tr id="emptyRow">
                    <td colspan="5" class="text-center">Votre panier est vide.</td>
                </tr>
                </tbody>
                <tfoot class="table-light">
                <tr>
                    <th colspan="3" class="text-end">Total&nbsp;:</th>
                    <th id="cartTotal">0.00</th>
                    <th></th>
                </tr>
                </tfoot>
            </table>
        </div>

				<div class="text-start">
					<a href="#" class="btn btn-success">Terminer la commande</a>
			</div>
    </section>
		<script>
			document.addEventListener('DOMContentLoaded', () => {
					const body   = document.getElementById('cartBody');
					const totalE = document.getElementById('cartTotal');
					const countE = document.querySelectorAll('.cart-count');

					const load = () => JSON.parse(localStorage.getItem('cart') || '[]');
					const save = c => localStorage.setItem('cart', JSON.stringify(c));

					function render() {
							const cart = load();
							body.innerHTML = '';
							let total = 0;

							if (cart.length === 0) {
									body.innerHTML = '<tr><td colspan="5" class="text-center">Votre panier est vide.</td></tr>';
							} else {
								cart.forEach((item, i) => {
									const sub = item.price * item.qty;
									total += sub;
									body.insertAdjacentHTML('beforeend', `
											 <tr style="cursor:pointer;" onclick="window.location='/plants/${item.id}'">
													<td>${item.name}</td>
													<td>${item.price.toFixed(2)}</td>
													<td>
														<input type="number"
																	min="1"
																	onkeydown="return event.key !== 'e' && event.key !== '-'"
																	value="${item.qty}"
																	class="form-control form-control-sm qty-input"
																	style="width:80px;" data-i="${i}">
													</td>
													<td>${sub.toFixed(2)}</td>
													<td><button class="btn btn-sm btn-danger" data-i="${i}">‚úï</button></td>
											</tr>
								`	);
								});
								body.querySelectorAll('.qty-input').forEach(input => {
									input.addEventListener('input', updateQty);
									input.addEventListener('blur', updateQty);
								});
							}
							totalE.textContent = total.toFixed(2);
							countE.forEach(e => e.textContent = cart.reduce((s, it) => s + it.qty, 0));
					}

					body.addEventListener('click', e => {
							if (e.target.matches('button[data-i]')) {
									const cart = load();
									cart.splice(e.target.dataset.i, 1);
									save(cart);
									render();
							}
					});

					function updateQty(e) {
							const i = e.target.dataset.i;
							let val = parseInt(e.target.value);

							if (isNaN(val) || val < 1) val = 1;
							e.target.value = val;

							const cart = load();
							cart[i].qty = val;
							save(cart);
							render();
					}

					render();
					body.querySelectorAll('.qty-input').forEach(input => {
							input.addEventListener('input', updateQty);
							input.addEventListener('blur', updateQty);
					});g
			});
			</script>
	</div>
</body>
</html>

# target/classes/templates/profile.html
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Mon Profil | PlantShop</title>
    <link rel="stylesheet" href="/webjars/bootstrap/5.3.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <div th:replace="~{fragments/base :: header}"></div>

    <main class="container my-5">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card shadow">
                    <div class="card-header bg-success text-white">
                        <h2 class="h4 mb-0">Mon Profil</h2>
                    </div>
                    <div class="card-body">
                        <div class="row mb-4">
                            <div class="col-md-4 text-center">
                                <div class="rounded-circle bg-light d-flex align-items-center justify-content-center"
                                     style="width: 150px; height: 150px; margin: 0 auto;">
                                    <i class="fas fa-user fa-3x text-success"></i>
                                </div>
                            </div>
                            <div class="col-md-8">
                                <h3 class="h5" th:text="${user.name}">Nom Utilisateur</h3>
                                <p class="text-muted" th:text="${user.email}">email@example.com</p>

                                <div class="mt-3" th:if="${user.admin}">
                                    <span class="badge bg-warning text-dark">Administrateur</span>
                                </div>
                            </div>
                        </div>

                        <div class="border-top pt-3">
                            <h4 class="h5 mb-3">Informations du compte</h4>
                            <dl class="row">
                                <dt class="col-sm-3">Nom complet</dt>
                                <dd class="col-sm-9" th:text="${user.name}">-</dd>

                                <dt class="col-sm-3">Email</dt>
                                <dd class="col-sm-9" th:text="${user.email}">-</dd>

                                <dt class="col-sm-3">Type de compte</dt>
                                <dd class="col-sm-9">
                                    <span th:if="${user.admin}">Administrateur</span>
                                    <span th:unless="${user.admin}">Utilisateur standard</span>
                                </dd>
                            </dl>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <div th:replace="~{fragments/base :: footer}"></div>

    <script src="/webjars/bootstrap/5.3.2/js/bootstrap.bundle.min.js"></script>
    <script src="https://kit.fontawesome.com/a14342fe13.js" crossorigin="anonymous"></script>
</body>
</html>

# target/classes/templates/fragments/base.html
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>PlantShop - [[${title}]]</title>

	<!-- Bootstrap CSS -->
	<link rel="stylesheet" href="/webjars/bootstrap/5.3.2/css/bootstrap.min.css">

	<!-- Custom CSS -->
	<link rel="stylesheet" th:href="@{/css/style.css}">
</head>

<body>
	<th:block th:with="userRoleString=${userRole}">

		<script th:inline="javascript">
			document.addEventListener('DOMContentLoaded', () => {
				console.log('userRoleString = [[${userRoleString}]]');
			});
		</script>
		<!-- Navbar -->
		<nav class="navbar navbar-expand-lg navbar-dark bg-dark mb-4 fixed-top">
			<div class="container">
				<a class="navbar-brand" href="/">üåø PlantShop</a>
				<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
					<span class="navbar-toggler-icon"></span>
				</button>

				<div class="collapse navbar-collapse" id="navbarNav">
					<ul class="navbar-nav me-auto"></ul>
					<ul class="navbar-nav">
						<li th:if="${loggedUserName}" class="navbar-text text-white me-2" th:text="${loggedUserName}">
						</li>
						<li
							th:if="${userRoleString == 'visitor' || userRoleString == 'user' || userRoleString == 'admin'}"
							class="nav-item">
							<a class="nav-link" href="/cart">Panier (<span class="cart-count">0</span>)</a>
						</li>
						<li th:if="${userRoleString == 'visitor'}" class="nav-item">
							<a class="nav-link" href="/login">Connexion</a>
						</li>
						<li th:if="${userRoleString == 'visitor'}" class="nav-item">
							<a class="nav-link" href="/register">Inscription</a>
						</li>
						<li th:if="${userRoleString == 'user' || userRoleString == 'admin'}" class="nav-item">
							<a class="nav-link" href="/my_profile">Mon Profil</a>
						</li>
						<li th:if="${userRoleString == 'user' || userRoleString == 'admin'}" class="nav-item">
							<a class="nav-link" href="/orders">Mes Commandes</a>
						</li>

						<li th:if="${userRoleString == 'admin'}" class="nav-item dropdown">
							<a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
								Admin
							</a>
							<ul class="dropdown-menu">
								<li><a class="dropdown-item" href="/admin/plants">Gestion Plantes</a></li>
								<li><a class="dropdown-item" href="/admin/users">Gestion Utilisateurs</a></li>
							</ul>
						</li>

						<li th:if="${userRoleString == 'user' or userRoleString == 'admin'}" class="nav-item">
							<form th:action="@{/logout}" method="post">
								<button type="submit" class="nav-link btn btn-link">D√©connexion</button>
							</form>
						</li>
					</ul>
				</div>
			</div>
		</nav>

		<div class="container">
			<!-- Messages flash -->
			<div th:if="${message}" class="alert alert-success" th:text="${message}"></div>
			<div th:if="${error}" class="alert alert-danger" th:text="${error}"></div>

			<!-- Contenu principal -->
			<div layout:fragment="content"></div>
		</div>

		<!-- Bootstrap JS -->
		<script src="/webjars/bootstrap/5.3.2/js/bootstrap.bundle.min.js"></script>
		<script src="/js/app.js"></script>
		<script th:inline="javascript">
			function refreshCart() {
				const total = (JSON.parse(localStorage.getItem('cart') || '[]'))
					.reduce((s, i) => s + i.qty, 0);
				document.querySelectorAll('.cart-count').forEach(e => e.textContent = total);
			}
			refreshCart();
			window.addEventListener('storage', e => e.key === 'cart' && refreshCart());
		</script>
	</th:block> <!-- Fin du bloc de variables calcul√©es -->
	</th:block> <!-- Fin du bloc de s√©curit√© -->
</body>

</html>

# target/classes/templates/fragments/navbar.html
<!-- templates/fragments/navbar.html -->
<nav class="navbar navbar-expand-lg navbar-dark bg-dark mb-4 fixed-top"
     th:fragment="navbar"                         <!-- ‚Üê nom du fragment -->
     xmlns:th="http://www.thymeleaf.org">

  <div class="container">
    <a class="navbar-brand" href="/">üåø¬†PlantShop</a>

    <!-- burger -->
    <button class="navbar-toggler" type="button"
            data-bs-toggle="collapse" data-bs-target="#navbarNav">
      <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarNav">

      <ul class="navbar-nav me-auto"></ul> <!-- espace gauche -->

      <!-- on r√©cup√®re la variable calcul√©e dans GlobalUserTypeAdvice -->
      <ul class="navbar-nav"
          th:with="role=${userRole}, name=${#authentication.principal?.name}">

        <li th:if="${name}" class="navbar-text text-white me-2"
            th:text="${name}"></li>

        <li class="nav-item">
          <a class="nav-link" href="/cart">Panier
            (<span class="cart-count">0</span>)
          </a>
        </li>

        <!-- VISITEUR -->
        <li th:if="${role == 'visitor'}" class="nav-item">
          <a class="nav-link" href="/login">Connexion</a>
        </li>
        <li th:if="${role == 'visitor'}" class="nav-item">
          <a class="nav-link" href="/register">Inscription</a>
        </li>

        <!-- UTILISATEUR / ADMIN -->
        <li th:if="${role == 'user' || role == 'admin'}" class="nav-item">
          <a class="nav-link" href="/my_profile">Mon¬†profil</a>
        </li>
        <li th:if="${role == 'user' || role == 'admin'}" class="nav-item">
          <a class="nav-link" href="/orders">Mes¬†commandes</a>
        </li>

        <!-- ADMIN -->
        <li th:if="${role == 'admin'}" class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" href="#" role="button"
             data-bs-toggle="dropdown">Admin</a>
          <ul class="dropdown-menu">
            <li><a class="dropdown-item" href="/admin/plants">Gestion¬†plantes</a></li>
            <li><a class="dropdown-item" href="/admin/users">Gestion¬†utilisateurs</a></li>
          </ul>
        </li>

        <!-- D√©connexion -->
        <li th:if="${role == 'user' || role == 'admin'}" class="nav-item">
          <form th:action="@{/logout}" method="post">
            <button type="submit" class="nav-link btn btn-link">D√©connexion</button>
          </form>
        </li>
      </ul>
    </div>
  </div>
</nav>

# target/classes/application.yml
server:
  port: 8080

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/plant_shop
    username: tilnede0x1182
    password: tilnede0x1182
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    open-in-view: false
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    encoding: UTF-8
    cache: false
  sql:
    init:
      mode: never

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.security: DEBUG

---

spring:
  config:
    activate:
      on-profile: dev
  thymeleaf:
    cache: false
  jpa:
    hibernate:
      ddl-auto: update
    defer-datasource-initialization: false
  sql:
    init:
      mode: never

---

spring:
  config:
    activate:
      on-profile: seed
  jpa:
    hibernate:
      ddl-auto: create-drop
    defer-datasource-initialization: true
  sql:
    init:
      mode: always

---

spring:
  config:
    activate:
      on-profile: prod
  devtools:
    enabled: false
    restart:
      enabled: false
  thymeleaf:
    cache: true
  jpa:
    hibernate:
      ddl-auto: validate
  sql:
    init:
      mode: never

# target/maven-archiver/pom.properties
artifactId=plant-shop-jpa-spring-boot-hibernate-security
groupId=com.planteshop
version=1.0.0

# README.md
# Plant Shop - E-commerce Botanique (JPA/Hibernate Edition)

Application compl√®te de vente de plantes avec architecture modulaire :
- **Backend** : API REST s√©curis√©e avec Spring Boot et persistance JPA/Hibernate
- **Frontend** : Interface React moderne avec gestion d'√©tat

## üõ† Stack Technique Compl√®te

### Backend (Spring Boot)
- **Langage**: Java 17
- **Framework**: Spring Boot 3.1.5 + Spring MVC
- **Persistence**:
  - JPA 3.1 (Jakarta)
  - Hibernate 6.2
  - PostgreSQL 42.7.3 (via driver JDBC)
- **S√©curit√©**:
  - Spring Security 6
  - JWT Authentication
- **Build**: Maven
- **Templates**: Thymeleaf 3.1

### Frontend
- **Core**: React 18 (via CDN)
- **UI/UX**:
  - Bootstrap 5.3 (Th√®me personnalis√©)

## Fonctionnalit√©s Cl√©s

### S√©curit√©
- Double couche JWT (Access + Refresh Tokens)
- Validation c√¥t√© serveur
- Protection CSRF/CORS

# Makefile
# D√©finition des variables
APP_NAME = plant-shop-jpa-spring-boot-hibernate-security
DB_NAME = plant_shop
DB_USER = tilnede0x1182
DB_PASSWORD = tilnede0x1182
DB_HOST = localhost
DB_PORT = 5432
PROFILE = dev

# T√¢ches par d√©faut
default: help

# Affiche l'aide
help:
	@echo "Usage:"
	@echo "  make help         Affiche cette aide"
	@echo "  make run          Lance l'application"
	@echo "  make test         Ex√©cute les tests"
	@echo "  make db-create    Cr√©e la base de donn√©es"
	@echo "  make db-drop      Supprime la base de donn√©es"
	@echo "  make db-migrate   Applique les migrations de base de donn√©es"
	@echo "  make clean        Nettoie les fichiers g√©n√©r√©s"

# Installaton des d√©pendances
install:
	clear && mvn clean install

# Lance l'application
run:
	clear && mvn -q spring-boot:run -Dspring-boot.run.profiles=$(PROFILE) | grep -E "WARN|ERROR|DEBUG :"

prod: clean
	clear && mvn -q spring-boot:run -Dspring-boot.run.profiles=prod | grep -E "WARN|ERROR"

# Ex√©cute les tests
test:
	clear && mvn -q test

# Nettoie les fichiers g√©n√©r√©s
clean:
	clear && mvn -q clean

# Cr√©e les tables de la base de donn√©es
db-create: seed

# Supprime les tables de la base de donn√©es
db-drop:
	sudo -u postgres psql -d $(DB_NAME) -c "DROP SCHEMA public CASCADE;"
	sudo -u postgres psql -d $(DB_NAME) -c "CREATE SCHEMA public;"

# Met √† jour les d√©pendances et reconstruit le projet
update: reset

# R√©initialise la base de donn√©es
reset: seed

# T√¢che pour seed la base de donn√©es (si vous avez un m√©canisme de seed)
seed:
	# clear && mvn -q spring-boot:run -Dspring-boot.run.profiles=seed | grep -E "WARN|ERROR|DEBUG :"
	clear && mvn -q spring-boot:run -Dspring-boot.run.profiles=seed | grep -E "WARN|ERROR|DEBUG :|DEBUG"

.PHONY: test clean db-create db-drop update reset seed

# src/main/resources/static/index.html
<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <title>OrganisationSim - Accueil</title>
	<link rel="icon" type="image/x-icon" href="favicon/organisation-sim.svg">
  <link rel="stylesheet" href="style/main.css">
</head>
<body>

<!-- üîó Barre de navigation globale -->
<nav class="navbar">
  <a href="index.html" class="logo">OrganisationSim</a>
  <a href="constraints.html">Cr√©er un projet</a>
  <a href="projects.html">Liste des projets</a>
</nav>

<header>
  <h1>Bienvenue sur OrganisationSim</h1>
</header>

<div class="container">
  <h2>Tableau r√©capitulatif (Diagramme de Pert simplifi√©)</h2>

  <table class="pert-table">
    <thead>
      <tr>
        <th>√âtape</th>
        <th>Responsable</th>
        <th>Dur√©e estim√©e</th>
        <th>Pr√©requis</th>
      </tr>
    </thead>
    <tbody id="pertTableBody">
      <tr>
        <td>Analyse</td>
        <td>Chef de projet</td>
        <td>3 jours</td>
        <td>-</td>
      </tr>
      <tr>
        <td>Conception</td>
        <td>Architecte</td>
        <td>5 jours</td>
        <td>Analyse</td>
      </tr>
      <tr>
        <td>D√©veloppement</td>
        <td>√âquipe Dev</td>
        <td>10 jours</td>
        <td>Conception</td>
      </tr>
      <tr>
        <td>Recette</td>
        <td>QA</td>
        <td>4 jours</td>
        <td>D√©veloppement</td>
      </tr>
    </tbody>
  </table>
</div>

</body>
</html>

# src/main/resources/templates/login.html
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org"
      layout:decorate="~{fragments/base}"
      th:with="title='Connexion'">
<head>
    <title>Connexion</title>
</head>
<body>
<div layout:fragment="content">
    <section class="container pt-5 mt-5">
        <div class="row justify-content-center">
            <div class="col-md-6 col-lg-4">
                <div class="card shadow">
                    <div class="card-header bg-success text-white">
                        <h4 class="mb-0 text-center">Connexion</h4>
                    </div>
                    <div class="card-body p-4">

                        <div th:if="${param.error}" class="alert alert-danger">
                            Identifiants invalides
                        </div>

                        <form th:action="@{/login}" method="post">
                            <div class="mb-3">
                                <label for="username" class="form-label">Email</label>
                                <input type="text" class="form-control" id="username" name="email" required>
                            </div>
                            <div class="mb-3">
                                <label for="password" class="form-label">Mot de passe</label>
                                <input type="password" class="form-control" id="password" name="password" required>
                            </div>
                            <button type="submit" class="btn btn-success w-100">Se connecter</button>
                        </form>

												<div class="mt-3 text-center">
													<span>Pas encore de compte ?&nbsp;</span>
													<a th:href="@{/register}" class="text-success text-decoration-none">Inscrivez-vous !</a>
											</div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
</body>
</html>

# src/main/resources/templates/plants/show.html
<!DOCTYPE html>
<html layout:decorate="~{fragments/base}" xmlns:th="http://www.thymeleaf.org">
    <div layout:fragment="content">
        <div class="container">
            <h1 class="mb-4">üå± D√©tail de la plante</h1>

            <div class="card mb-4 shadow-sm">
                <div class="card-body">
                    <h2 class="card-title" th:text="${plant.name}">Nom de la plante</h2>
                    <p class="card-text" th:text="${plant.description}">Description</p>

                    <ul class="list-group list-group-flush mb-3">
                        <li class="list-group-item">
                            <strong>Cat√©gorie :</strong> <span th:text="${plant.category}">Cat√©gorie</span>
                        </li>
                        <li class="list-group-item">
                            <strong>Prix :</strong> <span th:text="${plant.price}">0.00</span> ‚Ç¨
                        </li>
                        <li class="list-group-item">
                            <strong>Stock disponible :</strong> <span th:text="${plant.stock}">0</span>
                        </li>
                    </ul>

                    <a href="/plants" class="btn btn-secondary">Retour √† la page d'acceuil</a>
                </div>
            </div>
        </div>
    </div>
</html>

# src/main/resources/templates/plants/index.html
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" layout:decorate="~{fragments/base}" th:with="title='Liste des plantes'">

<head>
	<title>Plantes</title>
</head>

<body>
	<div layout:fragment="content">
		<section class="container pt-5 mt-5">
			<div th:if="${finalCurrentUserType == 'admin'}" class="mb-3">
				<a href="/admin/plants/new" class="btn btn-primary">Ajouter une plante</a>
			</div>

			<div class="row">
				<div th:each="plant : ${plants}" class="col-md-4 mb-4">
					<div class="card h-100 plant-card" th:data-id="${plant.id}">
						<div class="card-body position-relative">
							<h5 class="card-title" th:text="${plant.name}">Nom</h5>
							<p class="card-text" th:text="${plant.description}">Description</p>
							<p class="text-muted">Prix¬†: <span th:text="${plant.price}">0.0</span>¬†‚Ç¨</p>
							<p class="text-muted">Stock¬†: <span th:text="${plant.stock}">0</span></p>

							<div class="d-flex gap-2">
								<button type="button" class="btn btn-success flex-grow-1 add-to-cart" th:data-id="${plant.id}" style="z-index: 1; position: relative;"
									th:data-name="${plant.name}" th:data-price="${plant.price}">
									Ajouter au panier
								</button>
							</div>
						</div>
					</div>
				</div>
		</section>
		<script>
			document.addEventListener('DOMContentLoaded', () => {
				const load = () => JSON.parse(localStorage.getItem('cart') || '[]');
				const save = c => localStorage.setItem('cart', JSON.stringify(c));

				// Bouton ajouter au panier
				document.querySelectorAll('.add-to-cart').forEach(btn => {
					btn.addEventListener('click', e => {
						e.stopPropagation();   // bloque la remont√©e vers l‚Äô√©l√©ment <a>
						e.preventDefault();    // annule la navigation
						const id = btn.dataset.id;
						const name = btn.dataset.name;
						const price = parseFloat(btn.dataset.price);

						const cart = load();
						const item = cart.find(i => i.id == id);
						item ? item.qty++ : cart.push({id, name, price, qty: 1});
						save(cart);
						refreshCart();                 // fonction d√©j√† d√©finie dans base.html
					});
				});

				// Navigation vers la fiche plante
				document.querySelectorAll('.plant-card').forEach(card => {
					card.addEventListener('click', () => {
						const id = card.dataset.id;
						window.location.href = "/plants/" + id;
					});
				});
			});
		</script>
	</div>
</body>

</html>

# src/main/resources/templates/register.html
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org"
      layout:decorate="~{fragments/base}"
      th:with="title='Inscription'">
<head>
    <title>Inscription</title>
</head>
<body>
    <div layout:fragment="content">
        <section class="container pt-5 mt-5">
            <div class="row justify-content-center">
                <div class="col-md-6">
                    <div class="card shadow">
                        <div class="card-header bg-success text-white">
                            <h4 class="mb-0">Cr√©er un compte</h4>
                        </div>
                        <div class="card-body">
                            <form th:action="@{/register}" th:object="${user}" method="post">
                                <div class="mb-3">
                                    <label class="form-label">Nom complet</label>
                                    <input type="text" class="form-control" th:field="*{name}" required>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Adresse email</label>
                                    <input type="email" class="form-control" th:field="*{email}" required>
                                    <small class="text-danger" th:if="${#fields.hasErrors('email')}" th:errors="*{email}"></small>
                                </div>
                                <div class="mb-3">
                                    <label class="form-label">Mot de passe</label>
                                    <input type="password" class="form-control" th:field="*{password}" required>
                                </div>
                                <button type="submit" class="btn btn-success w-100">S'inscrire</button>
                            </form>
                            <hr>
                            <p class="text-center mb-0">
                                D√©j√† un compte ?
																&nbsp;
                                <a th:href="@{/login}" class="text-success">Se connecter</a>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </section>
    </div>
</body>
</html>

# src/main/resources/templates/cart.html
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org"
      layout:decorate="~{fragments/base}"
      th:with="title='Panier'">
<head>
    <title>Panier</title>
</head>
<body>
<div layout:fragment="content">
    <section class="container pt-5 mt-5">
        <h2 class="mb-4">üõí Votre panier</h2>

        <div class="table-responsive">
            <table class="table align-middle">
                <thead>
                <tr>
                    <th>Produit</th>
                    <th>Prix¬†(‚Ç¨)</th>
                    <th>Quantit√©</th>
                    <th>Sous‚Äëtotal¬†(‚Ç¨)</th>
                    <th></th>
                </tr>
                </thead>
                <tbody id="cartBody">
                <tr id="emptyRow">
                    <td colspan="5" class="text-center">Votre panier est vide.</td>
                </tr>
                </tbody>
                <tfoot class="table-light">
                <tr>
                    <th colspan="3" class="text-end">Total&nbsp;:</th>
                    <th id="cartTotal">0.00</th>
                    <th></th>
                </tr>
                </tfoot>
            </table>
        </div>

				<div class="text-start">
					<a href="#" class="btn btn-success">Terminer la commande</a>
			</div>
    </section>
		<script>
			document.addEventListener('DOMContentLoaded', () => {
					const body   = document.getElementById('cartBody');
					const totalE = document.getElementById('cartTotal');
					const countE = document.querySelectorAll('.cart-count');

					const load = () => JSON.parse(localStorage.getItem('cart') || '[]');
					const save = c => localStorage.setItem('cart', JSON.stringify(c));

					function render() {
							const cart = load();
							body.innerHTML = '';
							let total = 0;

							if (cart.length === 0) {
									body.innerHTML = '<tr><td colspan="5" class="text-center">Votre panier est vide.</td></tr>';
							} else {
								cart.forEach((item, i) => {
									const sub = item.price * item.qty;
									total += sub;
									body.insertAdjacentHTML('beforeend', `
											 <tr style="cursor:pointer;" onclick="window.location='/plants/${item.id}'">
													<td>${item.name}</td>
													<td>${item.price.toFixed(2)}</td>
													<td>
														<input type="number"
																	min="1"
																	onkeydown="return event.key !== 'e' && event.key !== '-'"
																	value="${item.qty}"
																	class="form-control form-control-sm qty-input"
																	style="width:80px;" data-i="${i}">
													</td>
													<td>${sub.toFixed(2)}</td>
													<td><button class="btn btn-sm btn-danger" data-i="${i}">‚úï</button></td>
											</tr>
								`	);
								});
								body.querySelectorAll('.qty-input').forEach(input => {
									input.addEventListener('input', updateQty);
									input.addEventListener('blur', updateQty);
								});
							}
							totalE.textContent = total.toFixed(2);
							countE.forEach(e => e.textContent = cart.reduce((s, it) => s + it.qty, 0));
					}

					body.addEventListener('click', e => {
							if (e.target.matches('button[data-i]')) {
									const cart = load();
									cart.splice(e.target.dataset.i, 1);
									save(cart);
									render();
							}
					});

					function updateQty(e) {
							const i = e.target.dataset.i;
							let val = parseInt(e.target.value);

							if (isNaN(val) || val < 1) val = 1;
							e.target.value = val;

							const cart = load();
							cart[i].qty = val;
							save(cart);
							render();
					}

					render();
					body.querySelectorAll('.qty-input').forEach(input => {
							input.addEventListener('input', updateQty);
							input.addEventListener('blur', updateQty);
					});g
			});
			</script>
	</div>
</body>
</html>

# src/main/resources/templates/profile.html
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org" lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Mon Profil | PlantShop</title>
    <link rel="stylesheet" href="/webjars/bootstrap/5.3.2/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/style.css">
</head>
<body>
    <div th:replace="~{fragments/base :: header}"></div>

    <main class="container my-5">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card shadow">
                    <div class="card-header bg-success text-white">
                        <h2 class="h4 mb-0">Mon Profil</h2>
                    </div>
                    <div class="card-body">
                        <div class="row mb-4">
                            <div class="col-md-4 text-center">
                                <div class="rounded-circle bg-light d-flex align-items-center justify-content-center"
                                     style="width: 150px; height: 150px; margin: 0 auto;">
                                    <i class="fas fa-user fa-3x text-success"></i>
                                </div>
                            </div>
                            <div class="col-md-8">
                                <h3 class="h5" th:text="${user.name}">Nom Utilisateur</h3>
                                <p class="text-muted" th:text="${user.email}">email@example.com</p>

                                <div class="mt-3" th:if="${user.admin}">
                                    <span class="badge bg-warning text-dark">Administrateur</span>
                                </div>
                            </div>
                        </div>

                        <div class="border-top pt-3">
                            <h4 class="h5 mb-3">Informations du compte</h4>
                            <dl class="row">
                                <dt class="col-sm-3">Nom complet</dt>
                                <dd class="col-sm-9" th:text="${user.name}">-</dd>

                                <dt class="col-sm-3">Email</dt>
                                <dd class="col-sm-9" th:text="${user.email}">-</dd>

                                <dt class="col-sm-3">Type de compte</dt>
                                <dd class="col-sm-9">
                                    <span th:if="${user.admin}">Administrateur</span>
                                    <span th:unless="${user.admin}">Utilisateur standard</span>
                                </dd>
                            </dl>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <div th:replace="~{fragments/base :: footer}"></div>

    <script src="/webjars/bootstrap/5.3.2/js/bootstrap.bundle.min.js"></script>
    <script src="https://kit.fontawesome.com/a14342fe13.js" crossorigin="anonymous"></script>
</body>
</html>

# src/main/resources/templates/fragments/base.html
<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">

<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>PlantShop - [[${title}]]</title>

	<!-- Bootstrap CSS -->
	<link rel="stylesheet" href="/webjars/bootstrap/5.3.2/css/bootstrap.min.css">

	<!-- Custom CSS -->
	<link rel="stylesheet" th:href="@{/css/style.css}">
</head>

<body>
	<th:block th:with="userRoleString=${userRole}">

		<script th:inline="javascript">
			document.addEventListener('DOMContentLoaded', () => {
				console.log('userRoleString = [[${userRoleString}]]');
			});
		</script>
		<!-- Navbar -->
		<nav class="navbar navbar-expand-lg navbar-dark bg-dark mb-4 fixed-top">
			<div class="container">
				<a class="navbar-brand" href="/">üåø PlantShop</a>
				<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
					<span class="navbar-toggler-icon"></span>
				</button>

				<div class="collapse navbar-collapse" id="navbarNav">
					<ul class="navbar-nav me-auto"></ul>
					<ul class="navbar-nav">
						<li th:if="${loggedUserName}" class="navbar-text text-white me-2" th:text="${loggedUserName}">
						</li>
						<li
							th:if="${userRoleString == 'visitor' || userRoleString == 'user' || userRoleString == 'admin'}"
							class="nav-item">
							<a class="nav-link" href="/cart">Panier (<span class="cart-count">0</span>)</a>
						</li>
						<li th:if="${userRoleString == 'visitor'}" class="nav-item">
							<a class="nav-link" href="/login">Connexion</a>
						</li>
						<li th:if="${userRoleString == 'visitor'}" class="nav-item">
							<a class="nav-link" href="/register">Inscription</a>
						</li>
						<li th:if="${userRoleString == 'user' || userRoleString == 'admin'}" class="nav-item">
							<a class="nav-link" href="/my_profile">Mon Profil</a>
						</li>
						<li th:if="${userRoleString == 'user' || userRoleString == 'admin'}" class="nav-item">
							<a class="nav-link" href="/orders">Mes Commandes</a>
						</li>

						<li th:if="${userRoleString == 'admin'}" class="nav-item dropdown">
							<a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown">
								Admin
							</a>
							<ul class="dropdown-menu">
								<li><a class="dropdown-item" href="/admin/plants">Gestion Plantes</a></li>
								<li><a class="dropdown-item" href="/admin/users">Gestion Utilisateurs</a></li>
							</ul>
						</li>

						<li th:if="${userRoleString == 'user' or userRoleString == 'admin'}" class="nav-item">
							<form th:action="@{/logout}" method="post">
								<button type="submit" class="nav-link btn btn-link">D√©connexion</button>
							</form>
						</li>
					</ul>
				</div>
			</div>
		</nav>

		<div class="container">
			<!-- Messages flash -->
			<div th:if="${message}" class="alert alert-success" th:text="${message}"></div>
			<div th:if="${error}" class="alert alert-danger" th:text="${error}"></div>

			<!-- Contenu principal -->
			<div layout:fragment="content"></div>
		</div>

		<!-- Bootstrap JS -->
		<script src="/webjars/bootstrap/5.3.2/js/bootstrap.bundle.min.js"></script>
		<script src="/js/app.js"></script>
		<script th:inline="javascript">
			function refreshCart() {
				const total = (JSON.parse(localStorage.getItem('cart') || '[]'))
					.reduce((s, i) => s + i.qty, 0);
				document.querySelectorAll('.cart-count').forEach(e => e.textContent = total);
			}
			refreshCart();
			window.addEventListener('storage', e => e.key === 'cart' && refreshCart());
		</script>
	</th:block> <!-- Fin du bloc de variables calcul√©es -->
	</th:block> <!-- Fin du bloc de s√©curit√© -->
</body>

</html>

# src/main/resources/templates/fragments/navbar.html
<!-- templates/fragments/navbar.html -->
<nav class="navbar navbar-expand-lg navbar-dark bg-dark mb-4 fixed-top"
     th:fragment="navbar"                         <!-- ‚Üê nom du fragment -->
     xmlns:th="http://www.thymeleaf.org">

  <div class="container">
    <a class="navbar-brand" href="/">üåø¬†PlantShop</a>

    <!-- burger -->
    <button class="navbar-toggler" type="button"
            data-bs-toggle="collapse" data-bs-target="#navbarNav">
      <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarNav">

      <ul class="navbar-nav me-auto"></ul> <!-- espace gauche -->

      <!-- on r√©cup√®re la variable calcul√©e dans GlobalUserTypeAdvice -->
      <ul class="navbar-nav"
          th:with="role=${userRole}, name=${#authentication.principal?.name}">

        <li th:if="${name}" class="navbar-text text-white me-2"
            th:text="${name}"></li>

        <li class="nav-item">
          <a class="nav-link" href="/cart">Panier
            (<span class="cart-count">0</span>)
          </a>
        </li>

        <!-- VISITEUR -->
        <li th:if="${role == 'visitor'}" class="nav-item">
          <a class="nav-link" href="/login">Connexion</a>
        </li>
        <li th:if="${role == 'visitor'}" class="nav-item">
          <a class="nav-link" href="/register">Inscription</a>
        </li>

        <!-- UTILISATEUR / ADMIN -->
        <li th:if="${role == 'user' || role == 'admin'}" class="nav-item">
          <a class="nav-link" href="/my_profile">Mon¬†profil</a>
        </li>
        <li th:if="${role == 'user' || role == 'admin'}" class="nav-item">
          <a class="nav-link" href="/orders">Mes¬†commandes</a>
        </li>

        <!-- ADMIN -->
        <li th:if="${role == 'admin'}" class="nav-item dropdown">
          <a class="nav-link dropdown-toggle" href="#" role="button"
             data-bs-toggle="dropdown">Admin</a>
          <ul class="dropdown-menu">
            <li><a class="dropdown-item" href="/admin/plants">Gestion¬†plantes</a></li>
            <li><a class="dropdown-item" href="/admin/users">Gestion¬†utilisateurs</a></li>
          </ul>
        </li>

        <!-- D√©connexion -->
        <li th:if="${role == 'user' || role == 'admin'}" class="nav-item">
          <form th:action="@{/logout}" method="post">
            <button type="submit" class="nav-link btn btn-link">D√©connexion</button>
          </form>
        </li>
      </ul>
    </div>
  </div>
</nav>

# src/main/resources/application.yml
server:
  port: 8080

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/plant_shop
    username: tilnede0x1182
    password: tilnede0x1182
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    open-in-view: false
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    encoding: UTF-8
    cache: false
  sql:
    init:
      mode: never

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.springframework.security: DEBUG

---

spring:
  config:
    activate:
      on-profile: dev
  thymeleaf:
    cache: false
  jpa:
    hibernate:
      ddl-auto: update
    defer-datasource-initialization: false
  sql:
    init:
      mode: never

---

spring:
  config:
    activate:
      on-profile: seed
  jpa:
    hibernate:
      ddl-auto: create-drop
    defer-datasource-initialization: true
  sql:
    init:
      mode: always

---

spring:
  config:
    activate:
      on-profile: prod
  devtools:
    enabled: false
    restart:
      enabled: false
  thymeleaf:
    cache: true
  jpa:
    hibernate:
      ddl-auto: validate
  sql:
    init:
      mode: never

# pom.xml
<project>
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.1.5</version>
    </parent>

    <groupId>com.planteshop</groupId>
    <artifactId>plant-shop-jpa-spring-boot-hibernate-security</artifactId>
    <version>1.0.0</version>

    <dependencies>
        <!-- PostgreSQL -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.7.3</version>
            <!-- <scope>runtime</scope> -->
        </dependency>

        <!-- Faker (pour la seed) -->
        <dependency>
            <groupId>net.datafaker</groupId>
            <artifactId>datafaker</artifactId>
            <version>2.0.2</version>
        </dependency>

        <!-- Web + Thymeleaf -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>nz.net.ultraq.thymeleaf</groupId>
            <artifactId>thymeleaf-layout-dialect</artifactId>
            <version>3.0.0</version>
        </dependency>

        <!-- JPA + Hibernate -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!-- Security -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>

        <!-- Bootstrap -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>5.3.2</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>webjars-locator</artifactId>
            <version>0.46</version>
        </dependency>
        <!-- Rechargement automatique -->
        <!-- <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency> -->
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>


# Tree du dossier
.
‚îú‚îÄ‚îÄ db
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ plant-shop.db
‚îú‚îÄ‚îÄ Makefile
‚îú‚îÄ‚îÄ pom.xml
‚îú‚îÄ‚îÄ projet.txt
‚îú‚îÄ‚îÄ README.md
‚îú‚îÄ‚îÄ script.sh
‚îú‚îÄ‚îÄ src
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ main
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ java
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ com
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ planteshop
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îú‚îÄ‚îÄ config
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ SecurityConfig.java
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îú‚îÄ‚îÄ controller
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ admin
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ api
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ ApiPlantController.java
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ exception
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ GlobalUserTypeAdvice.java
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ web
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ CartController.java
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ LoginController.java
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ ProfileController.java
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ RegistrationController.java
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ RequiredArgsConstructor.java
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ WebPlantController.java
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îú‚îÄ‚îÄ model
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ dto
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ request
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ response
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ entity
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ CustomerOrder.java
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ OrderItem.java
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ Plant.java
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ User.java
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ enums
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ RoleType.java
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îú‚îÄ‚îÄ PlantShopApplication.java
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îú‚îÄ‚îÄ repository
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ OrderRepository.java
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ PlantRepository.java
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ UserRepository.java
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îú‚îÄ‚îÄ seed
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ DatabaseSeeder.java
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îú‚îÄ‚îÄ service
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ impl
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ UserDetailsServiceImpl.java
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îî‚îÄ‚îÄ util
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†             ‚îî‚îÄ‚îÄ StringUtils.java
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ resources
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ application.yml
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ db
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ migration
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ V1__init_schema.sql
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ static
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ css
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ style.css
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ favicon.svg
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ index.html
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ js
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ app.js
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ templates
‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îú‚îÄ‚îÄ admin
‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îú‚îÄ‚îÄ cart.html
‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îú‚îÄ‚îÄ fragments
‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ base.html
‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ navbar.html
‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îú‚îÄ‚îÄ login.html
‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îú‚îÄ‚îÄ orders
‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îú‚îÄ‚îÄ plants
‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ index.html
‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ show.html
‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îú‚îÄ‚îÄ profile.html
‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îî‚îÄ‚îÄ register.html
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ test
‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ java
‚îÇ¬†¬†         ‚îî‚îÄ‚îÄ com
‚îÇ¬†¬†             ‚îî‚îÄ‚îÄ planteshop
‚îÇ¬†¬†                 ‚îú‚îÄ‚îÄ controller
‚îÇ¬†¬†                 ‚îî‚îÄ‚îÄ service
‚îú‚îÄ‚îÄ target
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ classes
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ application.yml
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ com
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ planteshop
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ config
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ SecurityConfig.class
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ controller
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ admin
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ api
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ ApiPlantController.class
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ exception
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ GlobalUserTypeAdvice$1.class
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ GlobalUserTypeAdvice.class
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ web
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ CartController.class
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ LoginController.class
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ ProfileController.class
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ RegistrationController.class
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ RequiredArgsConstructor.class
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ WebPlantController.class
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ model
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ dto
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ request
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ response
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ entity
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ CustomerOrder.class
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ OrderItem.class
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ Plant.class
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ User.class
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ enums
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ RoleType.class
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ PlantShopApplication.class
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ repository
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ OrderRepository.class
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ PlantRepository.class
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ UserRepository.class
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ seed
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ DatabaseSeeder$Credential.class
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ DatabaseSeeder.class
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ service
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ impl
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ UserDetailsServiceImpl.class
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ util
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îî‚îÄ‚îÄ StringUtils.class
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ db
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ migration
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ V1__init_schema.sql
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ static
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ css
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ style.css
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ favicon.svg
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ index.html
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ js
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ app.js
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ templates
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ cart.html
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ fragments
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ base.html
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ navbar.html
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ login.html
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ plants
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îú‚îÄ‚îÄ index.html
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ show.html
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ profile.html
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ register.html
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ generated-sources
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ annotations
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ generated-test-sources
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ test-annotations
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ maven-archiver
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ pom.properties
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ maven-status
‚îÇ¬†¬† ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ maven-compiler-plugin
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ compile
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬† ‚îî‚îÄ‚îÄ default-compile
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬†     ‚îú‚îÄ‚îÄ createdFiles.lst
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ inputFiles.lst
‚îÇ¬†¬† ‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ testCompile
‚îÇ¬†¬† ‚îÇ¬†¬†         ‚îî‚îÄ‚îÄ default-testCompile
‚îÇ¬†¬† ‚îÇ¬†¬†             ‚îú‚îÄ‚îÄ createdFiles.lst
‚îÇ¬†¬† ‚îÇ¬†¬†             ‚îî‚îÄ‚îÄ inputFiles.lst
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ plant-shop-jpa-spring-boot-hibernate-security-1.0.0.jar
‚îÇ¬†¬† ‚îú‚îÄ‚îÄ plant-shop-jpa-spring-boot-hibernate-security-1.0.0.jar.original
‚îÇ¬†¬† ‚îî‚îÄ‚îÄ test-classes
‚îÇ¬†¬†     ‚îî‚îÄ‚îÄ com
‚îÇ¬†¬†         ‚îî‚îÄ‚îÄ planteshop
‚îÇ¬†¬†             ‚îú‚îÄ‚îÄ controller
‚îÇ¬†¬†             ‚îî‚îÄ‚îÄ service
‚îú‚îÄ‚îÄ tmp.txt
‚îî‚îÄ‚îÄ users.txt

86 directories, 87 files
